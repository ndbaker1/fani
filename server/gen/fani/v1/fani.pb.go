// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: fani/v1/fani.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Thumbnail     []byte                 `protobuf:"bytes,3,opt,name=thumbnail,proto3,oneof" json:"thumbnail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileObject) Reset() {
	*x = FileObject{}
	mi := &file_fani_v1_fani_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileObject) ProtoMessage() {}

func (x *FileObject) ProtoReflect() protoreflect.Message {
	mi := &file_fani_v1_fani_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileObject.ProtoReflect.Descriptor instead.
func (*FileObject) Descriptor() ([]byte, []int) {
	return file_fani_v1_fani_proto_rawDescGZIP(), []int{0}
}

func (x *FileObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileObject) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *FileObject) GetThumbnail() []byte {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

type ListAlbumsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AlbumIs       []string               `protobuf:"bytes,1,rep,name=albumIs,proto3" json:"albumIs,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAlbumsRequest) Reset() {
	*x = ListAlbumsRequest{}
	mi := &file_fani_v1_fani_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAlbumsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlbumsRequest) ProtoMessage() {}

func (x *ListAlbumsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fani_v1_fani_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlbumsRequest.ProtoReflect.Descriptor instead.
func (*ListAlbumsRequest) Descriptor() ([]byte, []int) {
	return file_fani_v1_fani_proto_rawDescGZIP(), []int{1}
}

func (x *ListAlbumsRequest) GetAlbumIs() []string {
	if x != nil {
		return x.AlbumIs
	}
	return nil
}

func (x *ListAlbumsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ListAlbumsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileObject          `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAlbumsResponse) Reset() {
	*x = ListAlbumsResponse{}
	mi := &file_fani_v1_fani_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAlbumsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlbumsResponse) ProtoMessage() {}

func (x *ListAlbumsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fani_v1_fani_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlbumsResponse.ProtoReflect.Descriptor instead.
func (*ListAlbumsResponse) Descriptor() ([]byte, []int) {
	return file_fani_v1_fani_proto_rawDescGZIP(), []int{2}
}

func (x *ListAlbumsResponse) GetFiles() []*FileObject {
	if x != nil {
		return x.Files
	}
	return nil
}

type ListStagingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStagingRequest) Reset() {
	*x = ListStagingRequest{}
	mi := &file_fani_v1_fani_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStagingRequest) ProtoMessage() {}

func (x *ListStagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fani_v1_fani_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStagingRequest.ProtoReflect.Descriptor instead.
func (*ListStagingRequest) Descriptor() ([]byte, []int) {
	return file_fani_v1_fani_proto_rawDescGZIP(), []int{3}
}

func (x *ListStagingRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ListStagingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileObject          `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStagingResponse) Reset() {
	*x = ListStagingResponse{}
	mi := &file_fani_v1_fani_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStagingResponse) ProtoMessage() {}

func (x *ListStagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fani_v1_fani_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStagingResponse.ProtoReflect.Descriptor instead.
func (*ListStagingResponse) Descriptor() ([]byte, []int) {
	return file_fani_v1_fani_proto_rawDescGZIP(), []int{4}
}

func (x *ListStagingResponse) GetFiles() []*FileObject {
	if x != nil {
		return x.Files
	}
	return nil
}

type MoveFileEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Src           string                 `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst           string                 `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileEntry) Reset() {
	*x = MoveFileEntry{}
	mi := &file_fani_v1_fani_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileEntry) ProtoMessage() {}

func (x *MoveFileEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fani_v1_fani_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileEntry.ProtoReflect.Descriptor instead.
func (*MoveFileEntry) Descriptor() ([]byte, []int) {
	return file_fani_v1_fani_proto_rawDescGZIP(), []int{5}
}

func (x *MoveFileEntry) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *MoveFileEntry) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

type MoveFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*MoveFileEntry       `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFilesRequest) Reset() {
	*x = MoveFilesRequest{}
	mi := &file_fani_v1_fani_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFilesRequest) ProtoMessage() {}

func (x *MoveFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fani_v1_fani_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFilesRequest.ProtoReflect.Descriptor instead.
func (*MoveFilesRequest) Descriptor() ([]byte, []int) {
	return file_fani_v1_fani_proto_rawDescGZIP(), []int{6}
}

func (x *MoveFilesRequest) GetItems() []*MoveFileEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

type MoveFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFilesResponse) Reset() {
	*x = MoveFilesResponse{}
	mi := &file_fani_v1_fani_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFilesResponse) ProtoMessage() {}

func (x *MoveFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fani_v1_fani_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFilesResponse.ProtoReflect.Descriptor instead.
func (*MoveFilesResponse) Descriptor() ([]byte, []int) {
	return file_fani_v1_fani_proto_rawDescGZIP(), []int{7}
}

func (x *MoveFilesResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*MoveFileEntry       `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaRequest) Reset() {
	*x = GetMediaRequest{}
	mi := &file_fani_v1_fani_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaRequest) ProtoMessage() {}

func (x *GetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fani_v1_fani_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaRequest.ProtoReflect.Descriptor instead.
func (*GetMediaRequest) Descriptor() ([]byte, []int) {
	return file_fani_v1_fani_proto_rawDescGZIP(), []int{8}
}

func (x *GetMediaRequest) GetItems() []*MoveFileEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaResponse) Reset() {
	*x = GetMediaResponse{}
	mi := &file_fani_v1_fani_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaResponse) ProtoMessage() {}

func (x *GetMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fani_v1_fani_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaResponse.ProtoReflect.Descriptor instead.
func (*GetMediaResponse) Descriptor() ([]byte, []int) {
	return file_fani_v1_fani_proto_rawDescGZIP(), []int{9}
}

func (x *GetMediaResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_fani_v1_fani_proto protoreflect.FileDescriptor

var file_fani_v1_fani_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x66, 0x61, 0x6e, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x61, 0x6e, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x61, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x22, 0xd5, 0x01,
	0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x61, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x22, 0x41, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x49, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x49, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x66, 0x61, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x40, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x61, 0x6e, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x10, 0x4d, 0x6f,
	0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x66, 0x61, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2b, 0x0a, 0x11,
	0x4d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x61,
	0x6e, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x26, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x32, 0xab, 0x02, 0x0a, 0x0b, 0x46, 0x61, 0x6e, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x12, 0x1a, 0x2e, 0x66, 0x61, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66,
	0x61, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e, 0x66, 0x61, 0x6e,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x61, 0x6e, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x4d, 0x6f, 0x76, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x66, 0x61, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x66, 0x61, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x18, 0x2e, 0x66, 0x61, 0x6e, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x61, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x67, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x61, 0x6e, 0x69, 0x2e, 0x76, 0x31, 0x42,
	0x09, 0x46, 0x61, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x10, 0x66, 0x61,
	0x6e, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x66, 0x61, 0x6e, 0x69, 0x2f, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x46, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x46, 0x61, 0x6e, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x07, 0x46, 0x61, 0x6e, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x13, 0x46, 0x61, 0x6e, 0x69, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x08, 0x46, 0x61, 0x6e, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_fani_v1_fani_proto_rawDescOnce sync.Once
	file_fani_v1_fani_proto_rawDescData []byte
)

func file_fani_v1_fani_proto_rawDescGZIP() []byte {
	file_fani_v1_fani_proto_rawDescOnce.Do(func() {
		file_fani_v1_fani_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fani_v1_fani_proto_rawDesc), len(file_fani_v1_fani_proto_rawDesc)))
	})
	return file_fani_v1_fani_proto_rawDescData
}

var file_fani_v1_fani_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_fani_v1_fani_proto_goTypes = []any{
	(*FileObject)(nil),          // 0: fani.v1.FileObject
	(*ListAlbumsRequest)(nil),   // 1: fani.v1.ListAlbumsRequest
	(*ListAlbumsResponse)(nil),  // 2: fani.v1.ListAlbumsResponse
	(*ListStagingRequest)(nil),  // 3: fani.v1.ListStagingRequest
	(*ListStagingResponse)(nil), // 4: fani.v1.ListStagingResponse
	(*MoveFileEntry)(nil),       // 5: fani.v1.MoveFileEntry
	(*MoveFilesRequest)(nil),    // 6: fani.v1.MoveFilesRequest
	(*MoveFilesResponse)(nil),   // 7: fani.v1.MoveFilesResponse
	(*GetMediaRequest)(nil),     // 8: fani.v1.GetMediaRequest
	(*GetMediaResponse)(nil),    // 9: fani.v1.GetMediaResponse
	nil,                         // 10: fani.v1.FileObject.AttributesEntry
}
var file_fani_v1_fani_proto_depIdxs = []int32{
	10, // 0: fani.v1.FileObject.attributes:type_name -> fani.v1.FileObject.AttributesEntry
	0,  // 1: fani.v1.ListAlbumsResponse.files:type_name -> fani.v1.FileObject
	0,  // 2: fani.v1.ListStagingResponse.files:type_name -> fani.v1.FileObject
	5,  // 3: fani.v1.MoveFilesRequest.items:type_name -> fani.v1.MoveFileEntry
	5,  // 4: fani.v1.GetMediaRequest.items:type_name -> fani.v1.MoveFileEntry
	1,  // 5: fani.v1.FaniService.ListAlbums:input_type -> fani.v1.ListAlbumsRequest
	3,  // 6: fani.v1.FaniService.ListStaging:input_type -> fani.v1.ListStagingRequest
	6,  // 7: fani.v1.FaniService.MoveFiles:input_type -> fani.v1.MoveFilesRequest
	8,  // 8: fani.v1.FaniService.GetMedia:input_type -> fani.v1.GetMediaRequest
	2,  // 9: fani.v1.FaniService.ListAlbums:output_type -> fani.v1.ListAlbumsResponse
	4,  // 10: fani.v1.FaniService.ListStaging:output_type -> fani.v1.ListStagingResponse
	7,  // 11: fani.v1.FaniService.MoveFiles:output_type -> fani.v1.MoveFilesResponse
	9,  // 12: fani.v1.FaniService.GetMedia:output_type -> fani.v1.GetMediaResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_fani_v1_fani_proto_init() }
func file_fani_v1_fani_proto_init() {
	if File_fani_v1_fani_proto != nil {
		return
	}
	file_fani_v1_fani_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fani_v1_fani_proto_rawDesc), len(file_fani_v1_fani_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fani_v1_fani_proto_goTypes,
		DependencyIndexes: file_fani_v1_fani_proto_depIdxs,
		MessageInfos:      file_fani_v1_fani_proto_msgTypes,
	}.Build()
	File_fani_v1_fani_proto = out.File
	file_fani_v1_fani_proto_goTypes = nil
	file_fani_v1_fani_proto_depIdxs = nil
}
